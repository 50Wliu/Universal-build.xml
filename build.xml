<?xml version="1.0" ?> 
<project name="mod name here" basedir="../" default="release">  <!-- Put your mod name here -->
<!-- Universal build.xml Version 5.0.0pre3 by Wliu.  (See updates.txt on Github for changelog) -->

	<!-- Property Files -->
	<property file="build.properties"		prefix="build"/> <!-- Contains MC and Forge versions, etc. -->
	<property file="environment.properties"	prefix="environment"/> <!-- Contains folder paths -->
	<property file="build.number"			prefix="bn"/> <!-- Optional, contains build number -->
	<property file="private.properties"		prefix="private"/> <!-- Contains private release info -->

	<property name="mcp-dir"				value="${forge-dir}\mcp"/> <!-- Internal property -->
	<property name="mcpreobf-dir"			value="${mcp-dir}\reobf\minecraft"/> <!-- Internal property -->
	<property name="mcpsrc-dir"				value="${mcp-dir}\src\minecraft"/> <!-- Internal property -->

	<!-- Should we use a build number? -->
	<condition property="bn-exists">
		<available file="build.number"/>
	</condition>

	<!-- Should this be an official release? -->
	<condition property="official-release">
		<available file="private.properties"/>
	</condition>

	<!-- TODO: See if we can use the "usetimestamp" function for downloads.  Will only work if we can find a constant zip file -->
	<!-- Download Forge (if it doesn't exist) -->
	<target name="forge-download">
		<echo>
Downloading Forge ${forge-version} (one-time only until version change)
		</echo>
		<delete dir="${download-dir}"/>
		<mkdir dir="${download-dir}"/>

		<get src="http://files.minecraftforge.net/minecraftforge/minecraftforge-src-${mc-version}-${forge-version}.zip" dest="${download-dir}\Forge-${forge-version}.zip" failonerror="true"/>
	</target>

	<!-- Uncompress Forge -->
	<target name="forge-uncompress"	depends="forge-download">
		<echo>
Uncompressing Forge...
		</echo>
		<unzip src="${download-dir}\Forge-${forge-version}.zip" dest="${forge-dir}" failonerror="true"/>
	</target>

	<!-- Install Forge -->
	<target name="forge-install" depends="forge-uncompress">
		<echo>
Installing Forge...
		</echo>

		<!-- Fix executables' permissions and then execute them -->
		<chmod dir="${forge-dir}" perm="ugo+rx" includes="**.sh"/>

		<exec dir="${forge-dir}" executable="cmd" osfamily="Windows" failonerror="true">
			<arg line="/c install.cmd"/>
		</exec>
		<exec dir="${forge-dir}" executable="sh" osfamily="Unix" failonerror="true">
			<arg value="install.sh" />
		</exec>
	</target>

	<!-- Increment the build number -->
	<target name="build-number">
		<propertyfile file="build.number">
			<entry key="build-number" type="int" operation="+" default="1" />
		</propertyfile>
	</target>

	<!-- Copy the files -->
	<target name="copy">
		<echo>Copying ${mod-name}'s files... (1/5)
		</echo>
		<copy todir="${mcpsrc-dir}">
			<fileset dir="${mod.common-dir}"/>
		</copy>
	</target>

	<!-- Replace build tokens -->
	<target name="replace-tokens">
		<echo>Adding version info... (2/5)
		</echo>
		<replace dir="${mcpsrc-dir}" token="@VERSION@" value="${mod-version}"/>
	</target>

	<target name="replace-tokens-bn">
		<echo>Adding version info... (2/5)
		</echo>
		<replace dir="${mcpsrc-dir}" token="@VERSION@" value="${mod-version}"/>
		<replace dir="${mcpsrc-dir}" token="@BUILD_NUMBER" value="${build.number}"/>
	</target>

	<target name="replace-tokens-official">
		<echo>Adding version info... (2/5)
		</echo>
		<replace dir="${mcpsrc-dir}" token="@VERSION@" value="${mod-version}"/>
		<replace dir="${mcpsrc-dir}" token="@FINGERPRINT@" value="${fingerprint.signature}"/>
	</target>

	<target name="replace-tokens-bn-official">
		<echo>Adding version info... (2/5)
		</echo>
		<replace dir="${mcpsrc-dir}" token="@VERSION@" value="${mod-version}"/>
		<replace dir="${mcpsrc-dir}" token="@BUILD_NUMBER@" value="${build.number}"/>
		<replace dir="${mcpsrc-dir}" token="@FINGERPRINT@" value="${fingerprint.signature}"/>
	</target>

	<!-- Compile the files -->
	<target name="recompile">
		<echo>Compiling... (3/5)
		</echo>
		<exec dir="${mcp-dir}" executable="cmd" osfamily="Windows" failonerror="true">
			<arg line="/c recompile.bat"/>
		</exec>
		<exec dir="${mcp-dir}" executable="bash" osfamily="Unix" failonerror="true">
			<arg line="recompile.sh"/>
		</exec>

		<!-- Check for MCP compile failures -->
		<fail message="Oh no!  MCP failed to compile!">
			<condition>
				<resourcecontains resource="${mcp-dir}\logs\client_compile.log" substring="error:"/>
			</condition>
		</fail>

		<delete dir="${common-in-dir}"/>
		<delete file="${mcp-dir}\bin\mcmod-info"/>
	</target>

	<!-- Reobfuscate the files -->
	<target name="reobfuscate">
		<echo>Reobfuscating... (4/5)
		</echo>
		<exec dir="${mcp-dir}" executable="cmd" osfamily="Windows" failonerror="true">
			<arg line="/c reobfuscate_srg.bat"/>
		</exec>
		<exec dir="${mcp-dir}" executable="bash" osfamily="Unix" failonerror="true">
			<arg line="reobfuscate_srg.sh"/>
		</exec>
	</target>

	<target name="create-jar">
		<echo>Creating the jar... (5/5)
		</echo>

		<mkdir dir="${release-dir}"/>
		<jar destfile="${release-dir}\${mod-name} ${mod-version}.jar">
			<fileset dir="${mcpsrc-dir}" includes="mcmod-info"/>
			<fileset dir="${mcpreobf-dir}"/>
			<fileset dir="${resources-dir}"/>
			<fileset dir="${lang-dir}"/>
		</jar>

		<delete dir="${mcpreobf-dir}"/>
	</target>

	<!-- Default target, does everything for you -->
	<target name="release" depends="forge-install, copy, replace-tokens, recompile, reobfuscate, create-jar">
		<echo>Finished compiling ${mod-name}!</echo>
	</target>

	<!-- Use this if you use build numbers -->
	<target name="release-bn" depends="forge-install, copy, replace-tokens-bn, recompile, reobfuscate, create-jar">
		<echo>Finished compiling ${mod-name}!</echo>
	</target>

	<!-- Use this if you're officially releasing this build -->
	<target name="release-official" depends="forge-install, copy, replace-tokens-official, recompile, reobfuscate, create-jar">
		<echo>Finished compiling ${mod-name}!</echo>
	</target>

	<!-- Use this if you're officially releasing this build with a build number -->
	<target name="release-bn-official" depends="forge-install, copy, replace-tokens-bn-official, recompile, reobfuscate, create-jar">
		<echo>Finished compiling ${mod-name}!</echo>
	</target>
</project>